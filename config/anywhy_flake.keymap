#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_ctrl_en {
            bindings = <&enenter>;
            key-positions = <16 18>;
            layers = <0>;
        };

        combo_caps {
            bindings = <&caps_word>;
            key-positions = <13 16>;
            layers = <0>;
        };

        combo_jp {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <16 17>;
            layers = <0>;
        };

        combo_en {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <12 13>;
            layers = <0>;
        };

        combo_src {
            bindings = <&combo_src>;
            key-positions = <34 35>;
            layers = <0>;
        };
    };

    macros {
        bt_0: bt_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
            label = "BT_0";
        };

        bt_1: bt_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
            label = "BT_1";
        };

        bt_2: bt_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
            label = "BT_2";
        };

        combo_src: combo_src {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_5 &kp KP_NUMBER_7 &kp KP_NUMBER_0 &kp KP_NUMBER_4>;
            label = "COMBO_SRC";
        };

        enenter: enenter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SEMICOLON)>;
            label = "ENENTER";
        };
    };

    behaviors {
        lp: lp {
            compatible = "zmk,behavior-hold-tap";
            label = "LP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <105>;
        };

        cm: cm {
            compatible = "zmk,behavior-hold-tap";
            label = "CM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <105>;
            flavor = "tap-preferred";
        };

        high_lp: high_lp {
            compatible = "zmk,behavior-hold-tap";
            label = "HIGH_LP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            quick-tap-ms = <105>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q      &kp W      &kp E      &kp R      &kp T    &kp Y     &kp U    &kp I      &kp O    &kp P
  &kp A      &kp S      &kp D      &kp F      &kp G    &kp H     &kp J    &kp K      &kp L    &kp MINUS
  &kp Z      &kp X      &kp C      &kp V      &kp B    &kp N     &kp M    &kp COMMA  &kp DOT  &kp FSLH
  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp TAB  &kp BSPC  &kp RET  &kp RET    &kp RET  &kp RET
            >;
        };

        num {
            bindings = <
  &none      &none       &none      &none       &none          &none     &none      &none      &none      &none
  &none      &bt BT_NXT  &none      &kp ESC     &kp BACKSPACE  &kp TAB   &kp ENTER  &kp DEL    &kp GRAVE  &kp N7
  &kp N8     &kp N9      &kp MINUS  &bt BT_PRV  &none          &kp LGUI  &kp LALT   &kp LCTRL  &kp LSHFT  &kp LBKT
  &kp EQUAL  &kp N4      &kp N5     &kp N6      &kp N0         &none     &none      &kp LEFT   &kp DOWN   &kp UP
            >;
        };
    };
};
